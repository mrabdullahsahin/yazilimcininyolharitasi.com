import {
  Box,
  Container,
  Heading,
  SimpleGrid,
  Text,
  Link,
} from '@chakra-ui/react';
import { GlobalHeader } from '../components/global-header';
import { Footer } from '../components/footer';
import { OpensourceBanner } from '../components/opensource-banner';
import { DimmedMore } from '../components/dimmed-more';
import { LinksListItem } from '../components/links-list-item';
import { LinksList } from '../components/links-list';
import { HomeRoadmapItem } from '../components/roadmap/home-roadmap-item';
import { getFeaturedRoadmaps, RoadmapType } from '../lib/roadmap';
import { getAllGuides, GuideType } from '../lib/guide';
import siteConfig from '../content/site.json';
import Helmet from '../components/helmet';
import { PageWrapper } from '../components/page-wrapper';

type HomeProps = {
  roadmaps: RoadmapType[];
  guides: GuideType[];
};

export default function Home(props: HomeProps) {
  const { roadmaps, guides } = props;

  return (
    <PageWrapper>
      <GlobalHeader variant={'transparent'} />
      <Helmet title="YazÄ±lÄ±mcÄ±nÄ±n Yol HaritasÄ±" />
      <Box>
        <Container maxW="container.md" pb="90px">
          <Box py={['23px', '23px', '35px']} color="gray.200">
            <Heading
              color="gray.50"
              fontSize={['22px', '22px', '28px']}
              mb={['8px', '8px', '15px']}
            >
              Merhaba! ğŸ‘‹
            </Heading>
            <Text fontSize={['14px', '14px', '16px']} mb="10px">
              <Text as='cite'>Tek olan yaratÄ±cÄ±nÄ±n adÄ±yla</Text>
              <br />
              <Text fontWeight={500} as="span">
                yazilimcininyolharitasi.com
              </Text>{' '}
              yazÄ±lÄ±m dÃ¼nyasÄ±nda kendini geliÅŸtirmek isteyen, nereden baÅŸlayacaÄŸÄ±na karar veremeyenlere yol haritalarÄ±nÄ± seÃ§melerine ve Ã¶ÄŸrenmelerine rehberlik etmeye yardÄ±mcÄ± olmak iÃ§in yol haritalarÄ±, kÄ±lavuzlar, araÃ§lar ve diÄŸer eÄŸitim iÃ§eriklerini oluÅŸturmaya yÃ¶nelik aÃ§Ä±k kaynaklÄ± bir projedir.
              <br />
              Bu proje <Link
                textDecoration={'underline'}
                _hover={{ textDecoration: 'none', bg: 'blue.700' }}
                href='https://twitter.com/kamranahmedse'
                target='_blank'>Kamran Ahmed</Link>'in geliÅŸtirmiÅŸ olduÄŸu <Link
                textDecoration={'underline'}
                _hover={{ textDecoration: 'none', bg: 'blue.700' }}
                href='https://roadmap.sh'
                target='_blank'>roadmap.sh</Link> projesi kullanÄ±larak oluÅŸturulmuÅŸtur. Kendilerine ve projeye katkÄ±da bulunan herkese teÅŸekkÃ¼rlerimizle.
            </Text>
          </Box>
          <SimpleGrid columns={[1, 2, 3]} spacing={['10px', '10px', '15px']}>
            {roadmaps.map((roadmap: RoadmapType, counter: number) => (
              <HomeRoadmapItem
                isUpcoming={roadmap.isUpcoming}
                url={`/${roadmap.id}`}
                key={roadmap.id}
                colorIndex={counter}
                title={roadmap.featuredTitle}
                isCommunity={roadmap.isCommunity}
                subtitle={roadmap.featuredDescription}
              />
            ))}
          </SimpleGrid>
        </Container>
      </Box>

      <Box pb="80px" bg="white">
        <Container maxW="container.md" position="relative">
          <Box pt="40px" mb="20px">
            <Heading color="green.500" fontSize="25px" mb="5px">
              KÄ±lavuzlar
            </Heading>
          </Box>

          <LinksList>
            {guides.map((guide) => (
              <LinksListItem
                key={guide.id}
                href={`/guides/${guide.id}`}
                title={guide.title}
                badgeText={guide.isPro ? 'PRO' : ''}
                subtitle={guide.formattedUpdatedAt!}
              />
            ))}
            <DimmedMore href={'/guides'} text="KÄ±lavuzlarÄ± GÃ¶rÃ¼ntÃ¼le" />
          </LinksList>
        </Container>
      </Box>

      <OpensourceBanner />
      <Footer />
    </PageWrapper>
  );
}

export async function getStaticProps() {
  return {
    props: {
      roadmaps: getFeaturedRoadmaps(),
      guides: getAllGuides(10),
    },
  };
}
